name: Extract Inputs & Trigger Main Workflow

on:
  pull_request:
    types: [opened, edited]

jobs:
  extract-inputs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install jq
      run: sudo apt-get install -y jq

    - name: Debug PR Body
      run: |
        echo "PR Body:"
        cat $GITHUB_EVENT_PATH
        PR_BODY=$(jq -r '.pull_request.body' $GITHUB_EVENT_PATH)
        echo "$PR_BODY"

    - name: Extract Organization Username and Repository Name
      id: extract
      run: |
        PR_BODY=$(jq -r '.pull_request.body' $GITHUB_EVENT_PATH)
        echo "Extracted PR Body: $PR_BODY"
        ORG_USERNAME=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*Org Name\*\*: \[).*?(?=\])' || echo "Not provided")
        REPO_NAME=$(echo "$PR_BODY" | grep -oP '(?<=- \*\*Repo Name\*\*: \[).*?(?=\])' || echo "Not provided")
        echo "Extracted Org Name: $ORG_USERNAME"
        echo "Extracted Repo Name: $REPO_NAME"
        echo "ORG_USERNAME=$ORG_USERNAME" >> $GITHUB_ENV
        echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

    - name: Display extracted inputs
      run: |
        echo "Org Name: ${{ env.ORG_USERNAME }}"
        echo "Repo Name: ${{ env.REPO_NAME }}"

  trigger-main-workflow:
    needs: extract-inputs
    runs-on: ubuntu-latest
    steps:
      - name: Trigger main workflow
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.PAT_TOKEN }}
          script: |
            const org = '${{ env.ORG_USERNAME }}';
            const repo = '${{ env.REPO_NAME }}';
            const workflow_id = 'Scenario_1.yml'; 
            const ref = 'main';
            const inputs = {
              organization: org,
              repository: repo
            };
            await github.rest.actions.createWorkflowDispatch({
              owner: org,
              repo: repo,
              workflow_id: workflow_id,
              ref: ref,
              inputs: inputs
            });
